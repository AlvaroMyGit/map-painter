package io.codeforall.javatars;

public class Grid {

    protected final int CELL_SIZE = 20;
    protected final int PADDING = 10;
    protected int row;
    protected int col;
    protected MyRectangle[][] grid;
    protected Cursor cursor;
    protected MyKeyboard myKeyboard;

    public Grid(int col, int row) {
        this.row = row;
        this.col = col;
        grid = new MyRectangle[col][row];
        cursor = new Cursor(this);
        myKeyboard = new MyKeyboard(this, cursor, new ApplicationManager(this));
        start();
    }


    // The method we use to initialize the grid, draw the cursor in the initial position
    // And call the addKeyboard()
    protected void start() {
        drawGrid();
        cursor.drawCursor();
        myKeyboard.addKeyboard();
    }

    // Draws the grid using a bi-dimensional array to store the squares generated by this method
    protected void drawGrid() {
        int x = PADDING;
        int y = PADDING;
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid.length; j++) {
                grid[i][j] = new MyRectangle(x, y, CELL_SIZE, CELL_SIZE);
                grid[i][j].rectangleDraw();
                x += CELL_SIZE;
            }
            x = PADDING;
            y += CELL_SIZE;
        }
    }

    // Resets all squares on the grid back to unpainted mode
    public void clear() {
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid.length; j++) {
                if (grid[i][j].isPainted()){
                    grid[i][j].rectangleDelete();
                }
            }
        }
    }

    // Getters
    public MyRectangle[][] getGrid() {
        return grid;
    }
    public int getRow() {
        return row;
    }
    public int getCol() {
        return col;
    }
}
